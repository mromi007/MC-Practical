numBits = 1e5;
SNR_dB = 0:2:30;

bits = randi([0 1], numBits, 1);
bpskModulated = 2*bits - 1;
rayleighChannel = (randn(numBits, 1) + 1i*randn(numBits, 1))/sqrt(2);

BER = zeros(length(SNR_dB), 1);

for i = 1:length(SNR_dB)
    noise = (randn(numBits, 1) + 1i*randn(numBits, 1))/sqrt(2);
    SNR_linear = 10^(SNR_dB(i)/10);
    receivedSignal = rayleighChannel .* bpskModulated + noise/sqrt(SNR_linear);
    equalizedSignal = receivedSignal ./ rayleighChannel;
    demodulatedBits = real(equalizedSignal) > 0;
    BER(i) = sum(bits ~= demodulatedBits) / numBits;
end

theoryBer = 0.5 * erfc(sqrt(10.^(SNR_dB/10)));

figure(1)
semilogy(SNR_dB, theoryBer, 'mx-', 'LineWidth', 2)

figure(2)
semilogy(SNR_dB, theoryBer, 'mx-', 'LineWidth', 2)
hold on
semilogy(SNR_dB, BER, 'b-o', 'LineWidth', 2);
axis([0 30 10^-5 0.5])
grid on;
xlabel('SNR (dB)');
ylabel('Bit Error Rate (BER)');
title('BER vs SNR for BPSK in Rayleigh Fading Channel');
